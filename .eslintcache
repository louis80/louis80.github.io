[{"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\ljpr_app\\src\\App.js":"1","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\index.js":"2","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\App.js":"3","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\layout\\LeftBar.js":"4","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\serviceWorker.js":"5","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\general.js":"6","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\dataframe.js":"7","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\database.js":"8","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\landingPage.js":"9","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\covidImmo.js":"10","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\covidImmoFigure.js":"11","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\regex.js":"12","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\selenium.js":"13","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\beautifulsoup.js":"14","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\requests.js":"15","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\withTracker.js":"16"},{"size":528,"mtime":1606204412147,"results":"17","hashOfConfig":"18"},{"size":432,"mtime":1611651413264,"results":"19","hashOfConfig":"20"},{"size":2801,"mtime":1613056472979,"results":"21","hashOfConfig":"20"},{"size":22393,"mtime":1610621229256,"results":"22","hashOfConfig":"20"},{"size":5083,"mtime":1608538084748,"results":"23","hashOfConfig":"20"},{"size":4319,"mtime":1610621098052,"results":"24","hashOfConfig":"20"},{"size":3824,"mtime":1611929242157,"results":"25","hashOfConfig":"20"},{"size":4054,"mtime":1610620280869,"results":"26","hashOfConfig":"20"},{"size":2421,"mtime":1610009607010,"results":"27","hashOfConfig":"20"},{"size":22624,"mtime":1613056435707,"results":"28","hashOfConfig":"20"},{"size":30356,"mtime":1611651663233,"results":"29","hashOfConfig":"20"},{"size":3363,"mtime":1610620452482,"results":"30","hashOfConfig":"20"},{"size":1740,"mtime":1610620742450,"results":"31","hashOfConfig":"20"},{"size":1757,"mtime":1610620601948,"results":"32","hashOfConfig":"20"},{"size":1740,"mtime":1610620818292,"results":"33","hashOfConfig":"20"},{"size":1420,"mtime":1611667552563,"results":"34","hashOfConfig":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z87gr0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1xt74ic",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"107owcv","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\ljpr_app\\src\\App.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\index.js",["77"],"import ReactGA from 'react-ga';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/*ReactGA.initialize('G-VYJT4TRYGN'); // add your tracking id here.\r\nReactGA.pageview(window.location.pathname + window.location.search);*/\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n",["78","79"],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\App.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\layout\\LeftBar.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\serviceWorker.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\general.js",["80"],"\r\nimport React from 'react';\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nfunction CodeHighlight(codesample) {\r\n    return (\r\n    <Highlight theme={dracula} {...defaultProps} code={codesample} language=\"python\">\r\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n            {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n                {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n                ))}\r\n            </div>\r\n            ))}\r\n        </pre>\r\n        )}\r\n    </Highlight>\r\n    );\r\n}\r\n\r\nconst basicPythonCode = `\r\n# Calcul execution time\r\nfrom datetime import datetime\r\nstart = datetime.now()\r\n... Some code ...\r\nend = datetime.now()-start\r\n\r\n# Enumerate\r\ndate_range = ['2014', '2015', '2016', '2017', '2018']\r\nfor idx, q in enumerate(date_range):\r\n    print(idx, ' : ', q)\r\n# 0 : 2014\r\n# 1 : 2015\r\n# ...\r\n`;\r\n\r\nconst virtualEnvironment = `\r\n# Install virtualvenv\r\npython -m pip install --user virtualenv\r\n\r\n# Create a virtual environment\r\npython -m venv env_name\r\n\r\n# Activate the environment\r\n.\\\\env_name\\\\Scripts\\\\activate # Windows\r\nsource env_name/bin/activate # linux\r\n\r\n# Install requirements\r\npip install -r requirements.txt\r\npip install --proxy=http://... -r requirements.txt\r\n\r\n# Leaving the virtual environment\r\ndeactivate\r\n`;\r\n\r\nconst csvExcelManipulation = `\r\n# Count number of rows in the csv\r\nwith open('../data.csv', encoding='utf8', errors='ignore') as csvfile:\r\n    row_count = sum(1 for row in csvfile)\r\n    print(row_count if row_count else 'Empty')\r\n\r\n# Import csv part\r\ndef get_df_sample(beg, end):\r\n    '''\r\n    (Input) beg :\r\n            end :\r\n    (Output) df_sample :\r\n    '''\r\n    df_base = pd.read_csv('data.csv', nrows= 0) # get the columns name of the csv\r\n    df_sample = pd.read_csv('data.csv', skiprows=beg, nrows=(end-beg))\r\n    df_sample.columns = df_base.columns\r\n\r\n    return df_sample\r\n\r\n# export as excel\r\ndf.to_excel(r'C:/Users/.../df_'+str(j)+'.xlsx', encoding='utf-8')\r\n\r\n# Import excel\r\ndf = pd.read_excel('file.xlsx', converters = {'colname': str}, nrows=10).fillna('')\r\n`;\r\n\r\nconst iterateOverFiles = `\r\nfrom os.path import join, isfile, splitext\r\nfrom os import listdir\r\n\r\nfilenames = [join(folder_path, f) for f in listdir(folder_path) if isfile(join(folder_path,f))]\r\nfor filename in filenames:\r\n    extension = splitext(filename)[1]\r\n    if extension == '.xlsx':\r\n        ...\r\n`;\r\n\r\nconst a = `\r\n`;\r\n\r\n\r\nclass PythonGeneral extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" style={{marginBottom:'2rem', fontweight:'600'}}>\r\n                <HomeIcon fontSize='small'/>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Python </Typography>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> General </Typography>\r\n            </Breadcrumbs>\r\n\r\n            <div>\r\n                <span className=\"title-code-section\">Basic Python code </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight(basicPythonCode)} </div>\r\n            </div>\r\n            <div style={{marginTop:'30px'}}>\r\n                <span className=\"title-code-section\"> Virtual Environment </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight(virtualEnvironment)} </div> \r\n            </div>\r\n            <div style={{marginTop:'30px'}}>\r\n                <span className=\"title-code-section\"> Manipulation of csv or excel files </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight(csvExcelManipulation)} </div> \r\n            </div>\r\n            <div style={{marginTop:'30px'}}>\r\n                <span className=\"title-code-section\"> Iterate over files whithin a folder </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight(iterateOverFiles)} </div> \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PythonGeneral;\r\n","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\dataframe.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\database.js",[],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\landingPage.js",["81"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport LogoImg from '../article/img/RE.jpg';\r\n\r\n\r\nfunction getArticle(LogoImg) {\r\n    \r\n    return (\r\n      <div class=\"card mb-3 mx-auto\" style={{\"max-width\": \"900px\", cursor: 'pointer', 'box-shadow': '0 0 30px 6px rgba(31, 51, 73, 0.10)'}}>\r\n      <div class=\"row no-gutters\">\r\n        <div class=\"col-md-4\" style={{backgroundColor:'grey'}}>\r\n          <img src={LogoImg}  class=\"card-img img-article h-100\" alt=\"image-article\"></img>\r\n          \r\n        </div>\r\n        <div class=\"col-md-8\">\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Impacts du Covid-19 sur le marché de l'immobilier </h4>\r\n            <Chip className=\"m-1 mb-2 card-chip\" label={'Immobilier'} /><Chip className=\"m-1 mb-2 card-chip\" label={'Covid-19'} />\r\n            <p class=\"card-text\" style={{color:'grey'}}>\r\n            Depuis le début de la crise Covid, les analyses se multiplient dans de nombreux domaines pour anticiper à quoi ressemblera “le monde d’après”.\r\n            Le marché de l’immobilier est lui aussi affecté par la crise, et son futur apparaît aujourd’hui incertain.\r\n            Sans prétendre prédire l’évolution du cours de ce marché, cet article vise à en expliquer les déterminants essentiels, et les principaux enjeux. \r\n            </p>\r\n            <p class=\"card-text\">\r\n            <small class=\"text-muted\">\r\n                <TodayIcon className=\"mb-1\" fontSize='small' style={{height:'14px', 'color':'grey'}}/>Décembre 2020 \r\n                <span className='mx-2'>·</span> \r\n                <AccessTimeIcon className=\"mb-1\" fontSize='small' style={{height:'14px','color':'grey'}}/>10 minutes\r\n            </small></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nclass LandingPageArticle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n\r\n            <div>  </div>\r\n\r\n            <div>\r\n                <Link to=\"/article/impact-du-covid-sur-immobilier\"> {getArticle(LogoImg)}   </Link> \r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPageArticle;","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\covidImmo.js",["82","83","84","85"],"C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\article\\covidImmoFigure.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, {Component} from 'react';\r\nimport Chart from \"chart.js\";\r\nimport 'chartjs-plugin-annotation';\r\nimport * as ChartAnnotation from 'chartjs-plugin-annotation';\r\n\r\n\r\nvar annotations = [\r\n  {\r\n    type: 'line',\r\n    id: 'vline' ,\r\n    mode: 'vertical',\r\n    scaleID: 'x-axis-0',\r\n    value: \"2019 T4\",\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    label: {\r\n      yAdjust: -100,\r\n       enabled: true,\r\n       backgroundColor: '#1DE9B6',\r\n       position: \"center\",\r\n       content: '- 39% sur un an '\r\n    }\r\n  },\r\n  {\r\n    type: 'line',\r\n    mode: 'vertical',\r\n    scaleID: 'x-axis-0',\r\n    value: \"2019 T4\",\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    label: {\r\n      yAdjust: 120,\r\n      backgroundColor: '#7D204C',\r\n      enabled: true,\r\n      position: \"center\",\r\n      content: '- 43% sur un an '\r\n    }\r\n  },\r\n\r\n];\r\n\r\nclass CommercialisationLogementsNeufs extends Component {\r\n    chartRef = React.createRef();\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"bar\",\r\n            plugins: [ChartAnnotation],\r\n            data: {\r\n                //Bring in data\r\n                labels: [\r\n                         \"2016 T1\", \"2016 T2\", \"2016 T3\", \"2016 T4\",\r\n                         \"2017 T1\", \"2017 T2\", \"2017 T3\", \"2017 T4\",\r\n                         \"2018 T1\", \"2018 T2\", \"2018 T3\", \"2018 T4\",\r\n                         \"2019 T1\", \"2019 T2\", \"2019 T3\", \"2019 T4\",\r\n                         \"2020 T1\", \"2020 T2\", \"2020 T3\"\r\n                ],\r\n                datasets: [\r\n\r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"rgba(0,0,0,0)\", \r\n                    label: \"label1\",\r\n                    yAxisID: 'A',\r\n                    type: 'line',\r\n                    datalabels: {\r\n                      display: true\r\n                    },\r\n                    data: [\r\n                      {\r\n                        x: \"2019 T4\",\r\n                        y: 12000 \r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"rgba(0,0,0,0)\", \r\n                    label: \"label2\",\r\n                    yAxisID: 'A',\r\n                    type: 'line',\r\n                    datalabels: {\r\n                      display: true\r\n                    },\r\n                    data: [\r\n                      {\r\n                        x: \"2019 T4\",\r\n                        y: 45000 \r\n                      }\r\n                    ]\r\n                  },\r\n              \r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"silver\", \r\n                    label: \"line1\",\r\n                    yAxisID: 'A',\r\n                    type: 'line',\r\n                    datalabels: {\r\n                      display: true\r\n                    },\r\n                    data: [\r\n                      {\r\n                        x: \"2019 T2\",\r\n                        y: 12000 \r\n                      }, {\r\n                        x: \"2020 T2\",\r\n                        y: 12000  \r\n                      }\r\n                    ]\r\n                  },\r\n\r\n                              \r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"silver\", \r\n                    label: \"line2\",\r\n                    yAxisID: 'A',\r\n                    type: 'line',\r\n                    datalabels: {\r\n                      display: true\r\n                    },\r\n                    data: [\r\n                      {\r\n                        x: \"2019 T2\",\r\n                        y: 45000 \r\n                      }, {\r\n                        x: \"2020 T2\",\r\n                        y: 45000  \r\n                      }\r\n                    ]\r\n                  },\r\n\r\n\r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"#1DE9B6\", \r\n                    label: \"Réservations\",\r\n                    yAxisID: 'A',\r\n                    data: [28661, 34082, 28317, 36109, 31700, 33489, 30108, 35397, 31083, 35403, 28254, 35180, 31791, 34943, 28932, 35216, 26014, 21142, 24308],\r\n                    type: 'line'\r\n                  }, \r\n                  {\r\n                    fill: false,\r\n                    borderColor: \"#7D204C\",\r\n                    label: \"Mise en vente\",\r\n                    yAxisID: 'A',\r\n                    data: [28038, 38297, 27559, 33986, 31550, 38181, 25636, 31275, 34868, 38190, 26475, 28397, 26058, 34629, 25007, 26968, 20272, 19365, 18902],\r\n                    type: 'line'\r\n                  },\r\n                  {\r\n                    fill: true,\r\n                    borderColor: \"silver\",\r\n                    label: \"Encours\",\r\n                    yAxisID: 'B',\r\n                    data: [101119, 106238, 104562, 103743, 105034, 111331, 109024, 108273, 113576, 117815, 118040, 112825, 109425, 111617, 109586, 103848, 101020, 98267, 95238]\r\n                  }\r\n                ]\r\n            },\r\n            options: {\r\n              hover: {animationDuration: 0}, \r\n              animation: {\r\n                duration: 0,\r\n               \r\n                onComplete: function () {\r\n                    var ctx = this.chart.ctx;                    \r\n                    ctx.font = \"bold 12px 'Helvetica Neue', Helvetica, Arial, sans-serif\";\r\n                    ctx.textAlign = 'center';\r\n                    ctx.textBaseline = 'bottom';\r\n                    this.data.datasets.forEach(function (dataset) {\r\n                        if ( dataset.data.length === 1 && dataset.data[0].y === 12000){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('- 43% sur un an ').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#7D204C\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('- 43% sur un an ', model_.x, model_.y+7);\r\n\r\n                          //ctx.fillStyle = '#7D204C';\r\n                          //ctx.fillText('- 43% sur un an ', model.x, model.y - 5);\r\n                        \r\n                        }else if(dataset.data.length === 1 && dataset.data[0].y === 45000){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('- 39% sur un an ').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#1DE9B6\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('- 39% sur un an ', model_.x, model_.y+7);\r\n\r\n                          //ctx.fillStyle = '#1DE9B6';\r\n                          //var model = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          //ctx.fillText('- 39% sur un an ', model.x, model.y - 5);\r\n\r\n                        }\r\n                    });\r\n                    // ctx.style.backgroundColor = '#7D204C';\r\n                }},\r\n\r\n              tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n              },\r\n              legend: {\r\n                labels: {\r\n                    filter: function(item, chart) {\r\n                      return !item.text.includes('line1') && !item.text.includes('line2') && !item.text.includes('label1') && !item.text.includes('label2');\r\n                    }\r\n                }\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                }],\r\n                yAxes: [{\r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    max: 60000\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Nombre de mise en vente, de réservations'\r\n                  }\r\n                }, {\r\n                  id: 'B',\r\n                  type: 'linear',\r\n                  position: 'right',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    max: 120000\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Encours'\r\n                  }\r\n                }]\r\n              },\r\n              annotation: {\r\n                drawTime: \"afterDraw\", \r\n                //annotations: annotations\r\n              },\r\n             \r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\nclass EvolSocioParis extends Component {\r\n    chartRef = React.createRef();\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\" ],\r\n                datasets: [\r\n                  // IMMOBILIER PARIS\r\n                  {\r\n                    fill: false, borderColor: \"rgba(0,0,0,0)\", label: \"\", yAxisID: 'B', type: 'line', datalabels: { display: false },\r\n                    data: [{x: \"2015\", y: 10700 }]\r\n                  },\r\n                  // CADRE\r\n                  {\r\n                    fill: false, borderColor: \"rgba(0,0,0,0)\", label: \"\", yAxisID: 'A', type: 'line', datalabels: { display: false },\r\n                    data: [{x: \"2015\", y: 113 }]\r\n                  },\r\n                  // Profession INTERMEDIAIRE\r\n                  {\r\n                    fill: false, borderColor: \"rgba(0,0,0,0)\", label: \"\", yAxisID: 'A', type: 'line', datalabels: { display: false },\r\n                    data: [{x: \"2015\", y: 95 }]\r\n                  },\r\n                  // OUVRIER\r\n                  {\r\n                    fill: false, borderColor: \"rgba(0,0,0,0)\", label: \"\", yAxisID: 'A', type: 'line', datalabels: { display: false },\r\n                    data: [{x: \"2015\", y: 82 }]\r\n                  },\r\n\r\n                  {\r\n                    borderColor: \"#3E1026\", \r\n                    // backgroundColor: \"#1DE9B6\", \r\n                    fill: false,\r\n                    label: \"Cadres\",\r\n                    yAxisID: 'A',\r\n                    data: [100, null, null, null, null, 107.9, null, null, null, null, 110.6],\r\n                    type: 'line'\r\n                  }, \r\n                  //{\r\n                    // borderColor: \"#64193C\",\r\n                    // backgroundColor: \"#7D204C\",\r\n                    // fill: false,\r\n                    // label: \"Artisans, commerçants, chefs d'entreprise\",\r\n                    // yAxisID: 'A',\r\n                    // data: [100, null, null, null, null, 106.5, null, null, null, null,  115.8],\r\n                    // type: 'line'\r\n                  // },\r\n                  //{\r\n                  //  borderColor: \"#7d204c\",\r\n                    // backgroundColor: \"#7D204C\",\r\n                  //  fill: false,\r\n                  //  label: \"Employés\",\r\n                  //  yAxisID: 'A',\r\n                  //  data: [100, null, null, null, null, 97.7, null, null, null, null, 90.0],\r\n                  //  type: 'line',\r\n                  //  pointStyle: 'triangle',\r\n                  //  borderWidth : 3,\r\n                  //},\r\n                  {\r\n                    borderColor: \"#CBA5B7\", \r\n                    // backgroundColor: \"green\", \r\n                    fill: false,\r\n                    label: \"Ouvriers\",\r\n                    yAxisID: 'A',\r\n                    data: [100, null, null, null, null, 93.4, null, null, null, null, 82.2],\r\n                    type: 'line',\r\n                    //borderWidth : 3,\r\n                    // pointRadius: 0,\r\n                    // borderDash : [0,6],\r\n                    // borderCapStyle : 'round'\r\n                  }, \r\n                  {\r\n                    borderColor: \"#A46281\", \r\n                    // backgroundColor: \"green\", \r\n                    fill: false,\r\n                    label: \"Professions intermédiaires\",\r\n                    yAxisID: 'A',\r\n                    data: [100, null, null, null, null, 101.5, null, null, null, null, 96.5],\r\n                    type: 'line',\r\n                    //borderDash: [10,5],\r\n                  },\r\n                  {\r\n                    borderColor: \"#1DE9B6\", \r\n                    fill: false,\r\n                    label: \"Prix de l'immobilier à Paris\",\r\n                    yAxisID: 'B',\r\n                    //    [\"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\" ],\r\n                    data: [7240, 7870, 7950, 8070, 9600, 10220, 10240, 10000, 9620, 10060, 10750],\r\n                    type: 'line',\r\n                  },\r\n                ]\r\n            },\r\n            options: {\r\n              hover: {animationDuration: 0}, \r\n              animation: {\r\n                duration: 0,\r\n                //https://www.insee.fr/fr/statistiques/2011101?geo=ARR-751\r\n                onComplete: function () {\r\n                    var ctx = this.chart.ctx;                    \r\n                    ctx.font = \"bold 12px 'Helvetica Neue', Helvetica, Arial, sans-serif\";\r\n                    ctx.textAlign = 'center';\r\n                    ctx.textBaseline = 'bottom';\r\n                    this.data.datasets.forEach(function (dataset) {\r\n                        \r\n                        if ( dataset.data.length === 1 && dataset.data[0].y === 82){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('Ouvriers : - 21.7% sur dix ans').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#CBA5B7\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('Ouvriers : - 21.7% sur dix ans', model_.x, model_.y+7);\r\n\r\n                        } else if(dataset.data.length === 1 && dataset.data[0].y === 95){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('Professions intermédiaires : -3.6% sur dix ans').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#A46281\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('Professions intermédiaires : -3.6% sur dix ans', model_.x, model_.y+7);\r\n\r\n                        } else if(dataset.data.length === 1 && dataset.data[0].y === 113){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('Cadres : +9.6% sur dix ans').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#3E1026\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('Cadres : +9.6% sur dix ans', model_.x, model_.y+7);\r\n\r\n                        } else if(dataset.data.length === 1 && dataset.data[0].y === 10700){\r\n                          var model_ = dataset._meta[Object.keys(dataset._meta)[0]].data[0]._model;\r\n                          var width_ = ctx.measureText('Immobilier Paris : +33% sur dix ans').width+10;\r\n                          var height_ = 20;\r\n                          ctx.fillStyle = \"#1DE9B6\";\r\n                          ctx.fillRect(model_.x-(width_/2), model_.y-(height_/2), width_, height_);\r\n                          ctx.fillStyle = 'white';\r\n                          ctx.fillText('Immobilier Paris : +33% sur dix ans', model_.x, model_.y+7);\r\n\r\n                        }\r\n                    });\r\n              }},\r\n              legend: {\r\n                display: false\r\n              },\r\n              spanGaps: true,\r\n              tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  // stacked: true,\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                }],\r\n                yAxes: [{\r\n                  // stacked: true, \r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 80,\r\n                    max: 120\r\n                  },\r\n                  gridLines: {\r\n                    // display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Catégories socioprofessionnelles (Indice base 100)',\r\n                    fontColor: \"#64193C\",\r\n                  }\r\n                }, {\r\n                  id: 'B',\r\n                  type: 'linear',\r\n                  position: 'right',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 7000,\r\n                    max: 11000\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: \"Prix de l'immobilier à Paris (m²)\",\r\n                    fontColor: \"#1DE9B6\",\r\n                  }\r\n                }]\r\n              },\r\n          \r\n            },\r\n            \r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\nclass InflationCreationMonetaire extends Component {\r\n    chartRef = React.createRef();\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [ \r\n                  \"1980\", \"1981\",\"1982\",\"1983\",\"1984\",\"1985\",\"1986\",\"1987\",\"1988\",\"1989\",\r\n                  \"1990\", \"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\r\n                  \"2000\", \"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\r\n                  \"2010\", \"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\", \"2020\"],\r\n                datasets: [\r\n\r\n                  \r\n                  {\r\n                    borderColor: \"#7D204C\", \r\n                    // backgroundColor: \"green\", \r\n                    fill: false,\r\n                    label: \"Agrégats monétaires M2 (encours)\",\r\n                    yAxisID: 'A',\r\n                    data:[\"0.38649626235833134\",\"0.4294787761872401\",\"0.4807769033474363\",\"0.5331667287780141\",\"0.5844926233640967\",\"0.6308057668559236\",\"0.6494771685994256\",\"0.6826037076820776\",\"0.7097763260772665\",\"0.7329489737013248\",\"0.7713381707112115\",\"0.7625154364966277\",\"0.7542319749216301\",\"0.7443336183148095\",\"0.7487237944918196\",\"0.7835003032495196\",\"0.837393954008374\",\"0.8394005158895441\",\"0.9205573945385858\",\"0.9819818634865657\",\"1.0\",\"1.0673666980877012\",\"1.1607485513441627\",\"1.2078347984304096\",\"1.2612680944969346\",\"1.377651606491732\",\"1.4803443160809933\",\"1.5888930296453807\",\"1.8144054482612477\",\"1.9003631687017266\",\"1.9558863289270814\",\"2.0925371389321232\",\"2.230550014249074\",\"2.3054606835171096\",\"2.358058033920103\",\"2.480507997749377\", \"2.59928535\", \"2.73563072\", \"2.97894498\", \"3.16599952\", \"3.38238084\"],\r\n                    type: 'line',\r\n                  },\r\n                  {\r\n                    borderColor: \"#CBA5B7\", \r\n                    // backgroundColor: \"green\", \r\n                    fill: false,\r\n                    label: \"Prix à la consommation\",\r\n                    yAxisID: 'A',\r\n                    data:[\"0.4582426141021435\",\"0.5196471243918308\",\"0.581051634681518\",\"0.6369572336019794\",\"0.6841562228545003\",\"0.7240233302813868\",\"0.7432695200736769\",\"0.7666398933928862\",\"0.7872608110274827\",\"0.8156718531018154\",\"0.8431664099479441\",\"0.8701477350662784\",\"0.891226895314977\",\"0.9097765563338317\",\"0.9249535517128948\",\"0.9409737135019056\",\"0.9595233745207604\",\"0.9713277042600317\",\"0.9780730355396152\",\"0.9833713726768829\",\"1\",\"1.016270337922403\",\"1.0362953692115142\",\"1.0575719649561952\",\"1.0801001251564455\",\"1.100125156445557\",\"1.1180225281602\",\"1.134668335419274\",\"1.1665832290362952\",\"1.167584480600751\",\"1.1853566958698372\",\"1.2103879849812265\",\"1.2340425531914891\",\"1.2448060075093865\",\"1.2510638297872338\",\"1.2515644555694618\", null, null, null, null, null],\r\n                    type: 'line',\r\n                  },\r\n                  {\r\n                    borderColor: \"#1DE9B6\", \r\n                    fill: false,\r\n                    label: \"Prix des logements anciens\",\r\n                    yAxisID: 'A',\r\n                    //    [\"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\" ],\r\n                    data:[\"0.41266814965085113\",\"0.45809211166559144\",\"0.4837910038434182\",\"0.5085126668263098\",\"0.5283510268551337\",\"0.5457824697583469\",\"0.5711302309829176\",\"0.6117286932429963\",\"0.6777616875200895\",\"0.7595005600615797\",\"0.826407234113268\",\"0.8694139466576468\",\"0.8488245212494203\",\"0.836591320843181\",\"0.8350438076148249\",\"0.8274331467568234\",\"0.8346957478731962\",\"0.849451359109658\",\"0.858987530749018\",\"0.9198019801980198\",\"1\",\"1.0792079207920793\",\"1.1722772277227724\",\"1.311881188118812\",\"1.50990099009901\",\"1.7425742574257426\",\"1.9524752475247524\",\"2.0801980198019803\",\"2.09950495049505\",\"1.9495049504950495\",\"2.0495049504950495\",\"2.1712871287128714\",\"2.15990099009901\",\"2.1143564356435647\",\"2.0772277227722773\",\"2.0386138613861386\", \"2.05695749\", \"2.1186662146999997\", \"2.1843448673556995\", \"2.2629812825805047\", \"2.3421856274708213\"],\r\n                    type: 'line',\r\n                  },\r\n                ]\r\n            },\r\n            options: {\r\n              elements: {\r\n                point:{\r\n                    radius: 0\r\n                }\r\n              },\r\n              spanGaps: true,\r\n              tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  // stacked: true,\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                }],\r\n                yAxes: [{\r\n                  // stacked: true, \r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 0,\r\n                    max: 3.5\r\n                  },\r\n                  gridLines: {\r\n                    // display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Indice (base 2000)',\r\n                    fontColor: \"grey\",\r\n                  }\r\n                },]\r\n              },\r\n          \r\n            },\r\n            \r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  class RatioDebtImmoIncome extends Component {\r\n    chartRef = React.createRef();\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"1995\", \"1996\", \"1997\", \"1998\", \"1999\", \"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\"],\r\n                datasets: [\r\n\r\n                  \r\n                  {\r\n                    borderColor: \"rgba(0, 0, 0, 0.6 )\", \r\n                    // backgroundColor: \"green\", \r\n                    fill: false,\r\n                    label: \"Allemagne\",\r\n                    yAxisID: 'A',\r\n                    data:[\"98.38999\", \"102.936\", \"106.7141\", \"111.3736\", \"116.2119\", \"118.4232\", \"114.7619\", \"116.0388\", \"114.5731\", \"112.8574\", \"110.7233\", \"108.1574\", \"105.1233\", \"101.8345\", \"102.595\", \"100.595\", \"98.38264000000001\", \"97.21162\", \"96.55417\", \"95.58514\", \"95.01755\", \"94.53259\", \"94.58971\", \"94.75551999999999\", \"96.2133\"],\r\n                    type: 'line',\r\n                  },\r\n                  //{\r\n                    // borderColor: \"darkBlue\", \r\n                    // backgroundColor: \"green\", \r\n                    // fill: false,\r\n                    // label: \"USA\",\r\n                    // yAxisID: 'A',\r\n                    // data:[\"94.30469000000001\", \"96.22100999999999\", \"97.3432\", \"98.52856\", \"102.6665\", \"104.0255\", \"107.6555\", \"112.7325\", \"120.83200000000001\", \"127.5723\", \"135.5351\", \"140.5759\", \"143.6107\", \"136.8497\", \"135.8478\", \"128.6968\", \"121.4275\", \"114.7026\", \"116.48200000000001\", \"111.5192\", \"108.3295\", \"108.3967\", \"107.3953\", \"104.575\"],\r\n                    // type: 'line',\r\n                  // },\r\n                  {\r\n                    borderColor: \"rgba(238, 238, 0, 0.6)\", \r\n                    fill: false,\r\n                    label: \"Espagne\",\r\n                    yAxisID: 'A',\r\n                    data: [\"64.01708\", \"64.77859000000001\", \"67.05067\", \"72.68475\", \"79.93459\", \"84.66525\", \"87.19019\", \"94.61031\", \"102.7121\", \"114.5074\", \"126.9269\", \"142.1469\", \"149.1548\", \"146.4012\", \"145.9195\", \"145.9475\", \"140.2461\", \"141.8113\", \"134.1725\", \"128.3346\", \"118.9835\", \"114.3275\", \"110.3096\", \"107.2154\", \"104.9661\"],\r\n                    type: 'line',\r\n                  },\r\n                  {\r\n                    borderColor: \"rgba(240, 52, 52, 0.6)\", \r\n                    fill: false,\r\n                    label: \"Royaume-Uni\",\r\n                    yAxisID: 'A',\r\n                    data: [\"98.63763\", \"96.50214\", \"98.03683000000001\", \"103.8206\", \"105.4171\", \"107.5819\", \"115.1893\", \"126.4023\", \"138.2088\", \"147.8326\", \"152.5913\", \"163.1321\", \"166.8308\", \"165.612\", \"160.2875\", \"156.7602\", \"155.9122\", \"150.4379\", \"146.2001\", \"145.8121\", \"141.5402\", \"144.9941\", \"146.3367\", \"143.3744\", \"142.0891\"],\r\n                    type: 'line',\r\n                  },\r\n                  {\r\n                    borderColor: \"rgb(0,0,139, 0.6)\", \r\n                    fill: false,\r\n                    label: \"France\",\r\n                    yAxisID: 'A',\r\n                    data: [\"68.6235\", \"71.24432\", \"74.94621\", \"75.34821\", \"77.97491\", \"76.50024\", \"78.59366\", \"81.03689\", \"85.13754\", \"86.87676\", \"92.30894\", \"97.27893\", \"101.0741\", \"102.7998\", \"109.3832\", \"112.8121\", \"113.4587\", \"108.2649\", \"110.3357\", \"111.1832\", \"115.4928\", \"115.8367\", \"119.7405\", \"118.4489\", \"122.1306\"],\r\n                    type: 'line',\r\n                  },\r\n                ]\r\n            },\r\n            options: {\r\n              elements: {\r\n                point:{\r\n                    radius: 0\r\n                }\r\n              },\r\n              spanGaps: true,\r\n              tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  // stacked: true,\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                }],\r\n                yAxes: [{\r\n                  // stacked: true, \r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 50,\r\n                    max: 170\r\n                  },\r\n                  gridLines: {\r\n                    // display: false,\r\n                  },\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Indice (base 100)',\r\n                    fontColor: \"grey\",\r\n                  }\r\n                },]\r\n              },\r\n          \r\n            },\r\n            \r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\n\r\n// https://france-inflation.com/inflation-depuis-1901.php\r\n// http://www.cgedd.developpement-durable.gouv.fr/prix-immobilier-evolution-a-long-terme-a1048.html\r\n// webstat.banque-france.fr/fr/quickview.do?SERIES_KEY=279.BSI1.M.FR.N.V.M20.A.1.U2.2300.Z01.E&start=01/01/1970&end=01/10/2020&trans=YVC&submitOptions.x=0&submitOptions.y=0\r\n// https://france-inflation.com/evolution-immobilier-ancien.php\r\n// webstat.banque-france.fr/fr/quickview.do?SERIES_KEY=279.BSI1.M.FR.N.V.M20.A.1.U2.2300.Z01.E\r\n\r\n// https://fr.statista.com/statistiques/1119722/variation-prix-logements-marche-immo-ancien-france/\r\n\r\nexport {\r\n  CommercialisationLogementsNeufs,\r\n  EvolSocioParis,\r\n  InflationCreationMonetaire,\r\n  RatioDebtImmoIncome\r\n}","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\regex.js",["99","100"],"import React from 'react';\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nfunction CodeHighlight(codesample) {\r\n    return (\r\n    <Highlight theme={dracula} {...defaultProps} code={codesample} language=\"python\">\r\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n            {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n                {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n                ))}\r\n            </div>\r\n            ))}\r\n        </pre>\r\n        )}\r\n    </Highlight>\r\n    );\r\n}\r\n\r\nconst BasicOperation = `\r\n# concatenate 2 dataframes\r\ndf = pd.concat([df1, df2])\r\n\r\n# change columns name\r\ndf.columns = ['column_name1','column_name2']\r\n\r\n# Access element of dataframe\r\ndf.iat[row, column]\r\n\r\n# deal with nan / None\r\ndf = df[df.column_name.notnull()]\r\ndf.column_name = df.column_name.apply(lambda x: x if not pd.isnull(x) else 'Null')\r\n\r\n# Apply function to dataframe column\r\ndf['name'] = df_sample.apply(lambda x : function_to_apply(x['name']), axis=1)\r\n\r\n# apply function to the dataframe\r\ndf.applymap(str)\r\n\r\n# drop dataframe column\r\ndf = df.drop(['column_name1', 'column_name2'], axis=1)\r\n\r\n# count occurence of values within dataframe column\r\ndf['column_name'].value_counts()\r\ndf.column_name.value_counts()\r\n\r\n# filtre on dataframe date column\r\nmin_date = min(df['datetime'])\r\nmax_date = max(df['datetime'])\r\nunique_column_value_between_date = df[(df['datetime']>=min_date) & (df['datetime']<=max_date)]['col_name'].unique()\r\n\r\n# Selection on occurences containing text within dataframe column\r\nlist_name_containing_test = [name for name in df.column_name.unique() if 'test' in name.lower()]\r\ndf = df[~df.column_name.isin(list_name_containing_test)] # ~ -> not \r\n\r\n# Multiply each dataframe rows by a vector\r\navg_df = pd.DataFrame({\r\n    var_name: dfb.multiply(\r\n    weights['temperature_weights'],\r\n    axis=1, level='column_name').sum(axis=1)\r\n})\r\n# dfb -> (xxx, 32) | weights['temperature_weights'] -> (32,)\r\n`;\r\n\r\nconst AddElementToDataframe = `\r\nimport pandas as pd\r\nfrom datetime import datetime\r\n\r\ndf = pd.DataFrame(columns=['name1', 'name2', 'time'])\r\ndf = df.append({'name1': 'value1', 'name2':'value2', 'time':datetime.now()}, ignore_index=True)\r\n`;\r\n\r\nclass PythonRegex extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" style={{marginBottom:'2rem', fontweight:'600'}}>\r\n                <HomeIcon fontSize='small'/>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Python </Typography>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Regex </Typography>\r\n            </Breadcrumbs>\r\n\r\n            <div>\r\n                <span className=\"title-code-section\">Title  </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight('text')}  </div>\r\n            </div>\r\n           \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PythonRegex;\r\n","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\selenium.js",["101"],"import React from 'react';\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nfunction CodeHighlight(codesample) {\r\n    return (\r\n    <Highlight theme={dracula} {...defaultProps} code={codesample} language=\"python\">\r\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n            {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n                {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n                ))}\r\n            </div>\r\n            ))}\r\n        </pre>\r\n        )}\r\n    </Highlight>\r\n    );\r\n}\r\n\r\nconst BasicOperation = `\r\n# concatenate 2 dataframes\r\n\r\n`;\r\n\r\n\r\n\r\nclass Selenium extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" style={{marginBottom:'2rem', fontweight:'600'}}>\r\n                <HomeIcon fontSize='small'/>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Python </Typography>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Selenium </Typography>\r\n            </Breadcrumbs>\r\n\r\n            <div>\r\n                <span className=\"title-code-section\">Title  </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight('text')}  </div>\r\n            </div>\r\n           \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Selenium;","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\beautifulsoup.js",["102"],"import React from 'react';\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nfunction CodeHighlight(codesample) {\r\n    return (\r\n    <Highlight theme={dracula} {...defaultProps} code={codesample} language=\"python\">\r\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n            {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n                {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n                ))}\r\n            </div>\r\n            ))}\r\n        </pre>\r\n        )}\r\n    </Highlight>\r\n    );\r\n}\r\n\r\nconst BasicOperation = `\r\n# concatenate 2 dataframes\r\n\r\n`;\r\n\r\n\r\n\r\nclass BeautifulSoup extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" style={{marginBottom:'2rem', fontweight:'600'}}>\r\n                <HomeIcon fontSize='small'/>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Python </Typography>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> BeautifulSoup </Typography>\r\n            </Breadcrumbs>\r\n\r\n            <div>\r\n                <span className=\"title-code-section\">Title  </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight('text')}  </div>\r\n            </div>\r\n           \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BeautifulSoup;\r\n","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\components\\python\\scraping\\requests.js",["103"],"import React from 'react';\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nfunction CodeHighlight(codesample) {\r\n    return (\r\n    <Highlight theme={dracula} {...defaultProps} code={codesample} language=\"python\">\r\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n            {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n                {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n                ))}\r\n            </div>\r\n            ))}\r\n        </pre>\r\n        )}\r\n    </Highlight>\r\n    );\r\n}\r\n\r\nconst BasicOperation = `\r\n# concatenate 2 dataframes\r\n\r\n`;\r\n\r\n\r\n\r\nclass Requests extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className='container-page' >\r\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" style={{marginBottom:'2rem', fontweight:'600'}}>\r\n                <HomeIcon fontSize='small'/>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Python </Typography>\r\n                <Typography style={{fontWeight:'500', fontSize:'14px'}}> Requests </Typography>\r\n            </Breadcrumbs>\r\n\r\n            <div>\r\n                <span className=\"title-code-section\">Title  </span>\r\n                <div style={{marginTop:'15px'}}> {CodeHighlight('text')}  </div>\r\n            </div>\r\n           \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Requests;","C:\\Users\\ljbcaa3n\\Documents\\GitHub\\louis80.github.io\\src\\withTracker.js",[],{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":15},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"112","line":100,"column":7,"nodeType":"106","messageId":"107","endLine":100,"endColumn":8},{"ruleId":"113","severity":1,"message":"114","line":17,"column":11,"nodeType":"115","endLine":17,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":99,"column":13,"nodeType":"115","endLine":99,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":133,"column":13,"nodeType":"115","endLine":133,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":166,"column":13,"nodeType":"115","endLine":166,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":207,"column":13,"nodeType":"115","endLine":207,"endColumn":85},{"ruleId":"104","severity":1,"message":"116","line":7,"column":5,"nodeType":"106","messageId":"107","endLine":7,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":184,"column":31,"nodeType":"106","messageId":"119","endLine":184,"endColumn":37},{"ruleId":"117","severity":1,"message":"120","line":185,"column":31,"nodeType":"106","messageId":"119","endLine":185,"endColumn":37},{"ruleId":"117","severity":1,"message":"121","line":186,"column":31,"nodeType":"106","messageId":"119","endLine":186,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":388,"column":31,"nodeType":"106","messageId":"119","endLine":388,"endColumn":37},{"ruleId":"117","severity":1,"message":"120","line":389,"column":31,"nodeType":"106","messageId":"119","endLine":389,"endColumn":37},{"ruleId":"117","severity":1,"message":"121","line":390,"column":31,"nodeType":"106","messageId":"119","endLine":390,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":397,"column":31,"nodeType":"106","messageId":"119","endLine":397,"endColumn":37},{"ruleId":"117","severity":1,"message":"120","line":398,"column":31,"nodeType":"106","messageId":"119","endLine":398,"endColumn":37},{"ruleId":"117","severity":1,"message":"121","line":399,"column":31,"nodeType":"106","messageId":"119","endLine":399,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":406,"column":31,"nodeType":"106","messageId":"119","endLine":406,"endColumn":37},{"ruleId":"117","severity":1,"message":"120","line":407,"column":31,"nodeType":"106","messageId":"119","endLine":407,"endColumn":37},{"ruleId":"117","severity":1,"message":"121","line":408,"column":31,"nodeType":"106","messageId":"119","endLine":408,"endColumn":38},{"ruleId":"104","severity":1,"message":"122","line":27,"column":7,"nodeType":"106","messageId":"107","endLine":27,"endColumn":21},{"ruleId":"104","severity":1,"message":"123","line":72,"column":7,"nodeType":"106","messageId":"107","endLine":72,"endColumn":28},{"ruleId":"104","severity":1,"message":"122","line":27,"column":7,"nodeType":"106","messageId":"107","endLine":27,"endColumn":21},{"ruleId":"104","severity":1,"message":"122","line":27,"column":7,"nodeType":"106","messageId":"107","endLine":27,"endColumn":21},{"ruleId":"104","severity":1,"message":"122","line":27,"column":7,"nodeType":"106","messageId":"107","endLine":27,"endColumn":21},"no-unused-vars","'ReactGA' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'a' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'annotations' is assigned a value but never used.","no-redeclare","'model_' is already defined.","redeclared","'width_' is already defined.","'height_' is already defined.","'BasicOperation' is assigned a value but never used.","'AddElementToDataframe' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]